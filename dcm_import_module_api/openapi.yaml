openapi: 3.0.3
info:
  title: DCM Import Module - OpenAPI-Document
  description: |-
    This is the OpenAPI 3.0 specification describing Import Module-containers.
    An Import Module-container allows the collection of IEs (Intellectual
    Entities) from a source system using protocol-specific plugins (e.g., via
    OAI-PMH) and their conversion into IPs (Information Packages) by utilizing
    an IP Builder-container.
  version: 6.2.0
servers:
  - url: 'http://localhost:8080/'
externalDocs:
  description: See repository hosted by University of MÃ¼nster
  url: https://zivgitlab.uni-muenster.de/ULB/lzvnrw/team-se/dcm-import-module-api
tags:
  - name: import
    description: import-related endpoints
paths:
  /ping:
    get:
      summary: ping
      description: Use as connection test. Returns 'pong'.
      operationId: ping
      responses:
        '200':
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: pong
        '400':
          $ref: '#/components/responses/400BadRequest'
  /status:
    get:
      summary: container status
      description: Returns Status (readiness) of container.
      operationId: get_status
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400BadRequest'
  /identify:
    get:
      summary: container self-description
      description: Returns a detailed description of the container properties.
      operationId: identify
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfDescription'
        '400':
          $ref: '#/components/responses/400BadRequest'
  /report:
    get:
      summary: get Report
      description: |-
        Returns Report if the job associated with the given token
        exists.
      operationId: get_report
      tags:
        - import
      parameters:
        - $ref: '#/components/parameters/Token'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Report'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/JobData'
                    example:
                      data:
                        success: false
                        IEs:
                          ie00:
                            path: ie/abcde-12345-fghijk-67890
                            sourceIdentifier: oai:repository:12345
                            IPIdentifier: ip00
                            fetchedPayload: true
                          ie01:
                            path: ie/bcdef-23456-ghijkl-78901
                            sourceIdentifier: oai:repository:6789
                            IPIdentifier: null
                            fetchedPayload: false
                        IPs:
                          ip00:
                            path: ip/cdefg-34567-hijklm-89012
                            valid: true
                            IEIdentifier: ie00
                            logId:
                              - ip00@ip_builder
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NoTarget'
        '503':
          $ref: '#/components/responses/503Busy'
  /import/internal:
    post:
      summary: import IPs from internal storage
      description: |-
        Perform an import of pre-built IPs from internal storage and
        issue corresponding validation requests with an IP Builder-
        service (only if specificationValidation is given) and/or an
        Object Validator-service (only if objectValidation is given).
        See GET-/identify for more information on connected services.

        If the request is accepted, a 201-response is triggered
        containing a JobToken. This token's value is required in the
        /report-GET endpoint to get a Report.
      operationId: import_internal
      tags:
        - import
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                import:
                  type: object
                  properties:
                    target:
                      $ref: '#/components/schemas/ImportTarget'
                    batch:
                      type: boolean
                      description:
                        whether to search for multiple IPs in the given
                        Target
                      default: True
                    test:
                      type: boolean
                      description:
                        whether to run import in test-mode (process only
                        subset of collected targets)
                      default: false
                      example: false
                  required:
                    - target
                specificationValidation:
                  type: object
                  description:
                    This block of the request is hydrated with target-
                    information and then forwarded to the respective
                    IP Builder-service for validation.
                  additionalProperties: true
                  example:
                    BagItProfile: "bagit_profiles/dcm_bagit_profile_v1.0.0.json"
                    BagItPayloadProfile: "bagit_profiles/dcm_bagit_profile_v1.0.0.json"
                objectValidation:
                  type: object
                  description:
                    This block of the request is hydrated with target-
                    information and then forwarded to the respective
                    Object Validator-service for validation.
                  additionalProperties: true
                  example:
                    plugins:
                      validation-request-1:
                        plugin: integrity
                        args:
                          method: md5
                          value: 46a78da2a246a86f76d066db766cda4f
                      validation-request-2:
                        plugin: jhove
                        args:
                          format_identification:
                            plugin: fido-puid
                token:
                  type: string
                  description:
                    idempotency identifier; if submitted previously, returns
                    the associated job token; otherwise uses this value as
                    new token's value
                  example: 37ee72d6-80ab-4dcd-a68d-f8d32766c80d
                callbackUrl:
                  $ref: '#/components/schemas/CallbackUrl'
              required:
                - import
      callbacks:
        termination:
          $ref: '#/components/callbacks/termination'
      responses:
        '201':
          $ref: '#/components/responses/201AcceptedSubmission'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NoTarget'
        '422':
          $ref: '#/components/responses/422SemanticProblem'
        '503':
          $ref: '#/components/responses/503Busy'
  /import/external:
    post:
      summary: import IPs from external source
      description: |-
        Perform an import of IEs from some source system and issue
        corresponding requests for building IPs via an IP Builder-
        service (only if build is given) and for validation with an
        Object Validator-service (only if both build and objectValidation
        are given). See GET-/identify for more information on connected
        services.

        If the request is accepted, a 201-response is triggered
        containing a JobToken. This token's value is required in the
        /report-GET endpoint to get a Report.
      operationId: import_external
      tags:
        - import
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                import:
                  type: object
                  properties:
                    plugin:
                      type: string
                      description: plugin name identifier
                    args:
                      title: ImportArgs
                      type: object
                      description:
                        key-value pairs of arguments for import module plugin
                        (view details via /identify-GET)
                      example:
                        metadata_prefix: "oai_dc"
                  required:
                    - plugin
                    - args
                build:
                  type: object
                  description:
                    This block of the request is hydrated with target-
                    information and then forwarded to the respective
                    IP Builder-service to build an IP and validate it
                    according to specification.
                  additionalProperties: true
                  example:
                    mappingPlugin:
                      plugin: oai-mapper
                      args:
                        additionalMetadata:
                          DC-Rights: "CC BY-NC 4.0"
                    BagItProfile: https://www.lzv.nrw/bagit_profile_v1.0.0.json
                    BagItPayloadProfile: https://www.lzv.nrw/bagit_profile_v1.0.0.json
                objectValidation:
                  type: object
                  description:
                    This block of the request is hydrated with target-
                    information and then forwarded to the respective
                    Object Validator-service for validation.
                  additionalProperties: true
                  example:
                    plugins:
                      validation-request-1:
                        plugin: integrity
                        args:
                          method: md5
                          value: 46a78da2a246a86f76d066db766cda4f
                      validation-request-2:
                        plugin: jhove
                        args:
                          format_identification:
                            plugin: fido-puid
                token:
                  type: string
                  description:
                    idempotency identifier; if submitted previously, returns
                    the associated job token; otherwise uses this value as
                    new token's value
                  example: 37ee72d6-80ab-4dcd-a68d-f8d32766c80d
                callbackUrl:
                  $ref: '#/components/schemas/CallbackUrl'
              required:
                - import
      callbacks:
        termination:
          $ref: '#/components/callbacks/termination'
      responses:
        '201':
          $ref: '#/components/responses/201AcceptedSubmission'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NoTarget'
        '422':
          $ref: '#/components/responses/422SemanticProblem'
        '503':
          $ref: '#/components/responses/503Busy'
  /import:
    delete:
      summary: abort job
      description:
        Aborts the execution of a job (if already running) or removes it
        from queue (otherwise). This operation is performed
        synchronously.
      operationId: abort
      tags:
        - import
      parameters:
        - $ref: '#/components/parameters/Token'
        - name: broadcast
          in: query
          description:
            whether this request should be broadcasted
            (only relevant in parallel deployment and only if message
            broadcasting is configured)
          schema:
            type: boolean
            default: true
          required: false
        - name: re-queue
          in: query
          description:
            whether the associated token should be added to the queue
            again
          schema:
            type: boolean
            default: false
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin:
                  type: string
                  description: verbose origin of request
                  example: frontend
                reason:
                  type: string
                  description: verbose reason for request
                  example: user abort
      responses:
        '200':
          description: success
          content:
            text/plain:
              schema:
                type: string
                example:
                  "successfully aborted '37ee72d6-80ab-4dcd-a68d-f8d32766c80d'"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '502':
          description: bad gateway
          content:
            text/plain:
              schema:
                type: string
                example:
                  "notification service unavailable"
components:
  schemas:
    Status:
      title: Status
      description:
        A Status gives a summary of the container's status like
        availability for job submissions.
      type: object
      properties:
        ready:
          type: boolean
          description: availability of container for a request
          example: true
      required:
        - ready
    DBAdapter:
      title: DBAdapter
      type: object
      description:
        A DBAdapter characterizes an adapter for a database by type and
        initialization settings.
      properties:
        type:
          type: string
          description: which adapter-type to use
          enum:
            - native
            - http
          example: http
        settings:
          type: object
          description: |-
            JSON object used to initialize the adapter

            adapter-specific set of settings (used during
            initialization); see dcm-common.db-subpackage for details
          additionalProperties: true
          example:
            url: https://www.lzv.nrw/db
            timeout: 10
            proxies:
              http: https://www.lzv.nrw/proxy
      required:
        - type
        - settings
    SelfDescription:
      title: SelfDescription
      type: object
      description: information regarding the service's properties
      properties:
        description:
          type: string
          description:
            a verbose self-description of the service functionality
          example:
            This service provides endpoints for ...
        version:
          type: object
          description: collection of version strings
          properties:
            api:
              type: string
              description: version string of the implemented API
              example: "0.2.0"
            app:
              type: string
              description: version string of the app
              example: "0.1.0"
            python:
              type: string
              description: version of the python implementation
              example: 3.10.12 (main, Mar 22 2024, 16:50:05) [GCC 11.4.0]
            software:
              type: object
              description: deployed software versions
            lib:
              type: object
              description: deployed library versions
              additionalProperties:
                type: string
                description: version string
                example: "0.1.0"
              example:
                dependency-a: "1.0.0"
                dependency-b: "0.2.0.post1"
          required:
            - api
            - app
            - python
            - software
            - lib
        configuration:
          type: object
          description: service configuration details
          properties:
            settings:
              type: object
              properties:
                allow_cors:
                  type: boolean
                  description: whether CORS requests are allowed
                  example: true
                fs_mount_point:
                  type: string
                  description: mount point of shared file system
                  example: /file_storage
                orchestration:
                  type: object
                  description: orchestration-related settings
                  properties:
                    at_startup:
                      type: boolean
                      description:
                        whether orchestration-processing loop is run at startup
                      example: true
                    queue:
                      $ref: '#/components/schemas/DBAdapter'
                    registry:
                      $ref: '#/components/schemas/DBAdapter'
                    token:
                      type: object
                      description: orchestration token-related settings
                      properties:
                        expiration:
                          type: boolean
                          description: whether job tokens (and their
                            associated info like report) expire
                          example: true
                        duration:
                          type: integer
                          description:
                            time until job token expires in seconds
                          example: 3600
                      required:
                        - expiration
                        - duration
                    debug:
                      type: boolean
                      description: whether to have orchestrator print
                        debug-information
                      example: true
                    controls_api:
                      type: boolean
                      description: whether the orchestration-controls
                        API is available
                      example: true
                    abort:
                      type: object
                      description: |-
                        abort-related settings

                        only relevant in parallel deployment
                      properties:
                        subscription:
                          type: boolean
                          description:
                            whether a subscription to the abort-notifications
                            is made
                          example: true
                        url:
                          type: string
                          description: url of the notification service
                          example: https://www.lzv.nrw/abort-notifications
                        timeout:
                          type: object
                          description: timeout-related settings
                          properties:
                            duration:
                              type: number
                              description: timeout duration
                              example: 1.0
                          required:
                            - duration
                        callback:
                          type: string
                          description: |-
                            url for abort-callbacks

                            if omitted, the subscriber's request address
                            is used (as determined by the notification
                            service)
                          example: https://www.lzv.nrw/subscriber
                      required:
                        - subscription
                    daemon_interval:
                      type: number
                      description:
                        interval of orchestrator-restarts (after crash) in
                        seconds
                      example: 1
                    orchestrator_interval:
                      type: number
                      description: time in seconds between each iteration
                        of the orchestrator's processing loop
                      example: 1
                  required:
                    - at_startup
                    - queue
                    - registry
                    - token
                    - debug
                    - controls_api
                    - abort
                import:
                  type: object
                  description: import-related settings
                  properties:
                    output:
                      type: string
                      description:
                        IE output directory (relative to fs_mount_point)
                      example: ie/
                    timeout:
                      type: object
                      description: source system timeout-related settings
                      properties:
                        duration:
                          type: integer
                          description: timeout duration in seconds
                          example: 30
                        max_retries:
                          type: integer
                          description:
                            maximum number of retries after timeout
                          example: 3
                        retry_interval:
                          type: integer
                          description: interval between retries in seconds
                          example: 360
                      required:
                        - duration
                        - max_retries
                        - retry_interval
                    test:
                      type: object
                      description: import-test-related settings
                      properties:
                        volume:
                          type: integer
                          description:
                            number of records processed during a test-import
                          example: 2
                        strategy:
                          type: string
                          description:
                            strategy for selecting subset of records during
                            a test-import
                          enum:
                            - first
                            - random
                          example: first
                  required:
                    - output
                    - timeout
                build:
                  type: object
                  description: IP Builder-service-related settings
                  properties:
                    timeout:
                      type: object
                      description:
                        timeout-related settings
                      properties:
                        duration:
                          type: integer
                          description: timeout duration in seconds
                          example: 30
                      required:
                        - duration
                  required:
                    - timeout
              required:
                - allow_cors
                - fs_mount_point
                - orchestration
                - import
                - build
            plugins:
              type: object
              description: mapping of available plugins
              additionalProperties:
                $ref: "#/components/schemas/Plugin"
              example:
                plugin-0:
                  name: plugin-0
                  description: performs ...
                  signature:
                    type: object
                    required: true
                    properties:
                      param-0:
                        type: integer
                        required: false
                        default: 0
                    additional_properties: false
                  context: context-0
                  dependencies:
                    dependency-a: "1.0.0"
            services:
              type: object
              description:
                mapping of hostname and url for secondary DCM-services
              additionalProperties:
                title: Service
                type: string
                format: url
              example:
                service: <service-url>
          required:
            - settings
            - plugins
            - services
      required:
        - description
        - version
        - configuration
    PluginArgSignature:
      title: PluginArgSignature
      type: object
      description: plugin argument
      properties:
        type:
          type: string
          description: JSON type of the argument
          enum:
            - "string"
            - "integer"
            - "number"
            - "boolean"
            - "array"
            - "object"
          example: string
        required:
          type: boolean
          description:
            if true, this argument is required for a valid request
          example: false
        description:
          type: string
          description: description of argument's purpose
          example: this argument sets ...
        example:
          description: example for argument value
          example: 0
        default:
          description: |-
            default value

            only applicable in case of "required: false" and only to
            primitive types or array
          example: 0
        itemType:
          type: string
          enum:
            - "string"
            - "integer"
            - "number"
            - "boolean"
          description: |-
            required in case of "type: array"; type of array elements

            Note that all arguments in an array are required to have the
            same type and cannot have default values assigned individually.
            A default can be given for the entire array in the parent
            PluginArgSignature. Only primitive types are allowed.
        properties:
          type: object
          description: |-
            required in case of "type: object"; mapping of child-names
            and child-PluginArgSignature
          additionalProperties:  # valid but not rendered in SwaggerUI
            $ref: '#/components/schemas/PluginArgSignature'
        additional_properties:
          type: boolean
          description: |-
            only applicable in case of "type: object"; if false, only
            explicitly listed properties are accepted
          example: false
      example:
        type: integer
        required: false
        default: 0
      required:
        - type
        - required
    Plugin:
      title: Plugin
      description: DCM-service plugin
      type: object
      properties:
        name:
          type: string
          description: plugin identifier
          example: plugin-0
        description:
          type: string
          description: description of plugin features
          example: performs ...
        signature:
          $ref: '#/components/schemas/PluginArgSignature'
        context:
          type: string
          description: identifier for the plugin context
          example: context-0
        dependencies:
          type: object
          description: plugin's dependency versions
          additionalProperties:
            type: string
            description: dependency version
          example:
            dependency-a: "1.0.0"
        info:
          type: object
          description: plugin-specific information in custom format
          additionalProperties: true
      required:
        - name
        - description
        - signature
    Path:
      type: string
      description: relative path for referencing a directory in file storage
      example: jobs/abcde-12345-fghijk-67890
    ImportTarget:
      title: ImportTarget
      description:
        Target directory for importing pre-built IPs. It is represented
        by its relative path within the shared filesystem.
      type: object
      properties:
        path:
          $ref: '#/components/schemas/Path'
      required:
        - path
    Token: # see also components/parameters/Token
      title: Token
      description: unique identifier
      type: string
      example: 37ee72d6-80ab-4dcd-a68d-f8d32766c80d
    ISODateTime:
      title: ISODateTime
      description: ISO-8601 datetime-stamp
      type: string
      pattern: /[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}/
      example: "2024-01-01T00:00:00+01:00"
    JobToken:
      title: JobToken
      description:
        A JobToken is used to uniquely identify a specific job.
      type: object
      properties:
        value:
          $ref: '#/components/schemas/Token'
        expires:
          type: boolean
          description: does the token expire
          example: true
        expires_at:
          $ref: '#/components/schemas/ISODateTime'
      required:
        - value
        - expires
    CallbackUrl:
      title: CallbackURL
      type: string
      description: job-termination callback url
      example: https://www.lzv.nrw/callback
    ReportIdentifier:
      title: ReportIdentifier
      description:
        This type of identifier is used to identify a Report's child.
      type: string
      pattern: /[0-9a-zA-Z-_]+@[0-9a-zA-Z-_]+/
      example: ip00@ip_builder
    IE:
      title: IE
      description:
        An IE is represented by its relative path within the shared
        filesystem. Additional information includes a source system
        identifier (optional), a reference to an IP that has been built
        from this IE (if available), and a boolean providing information
        on whether the payload has been fetched.
      type: object
      properties:
        path:
          type: string
          description: relative path referencing an IE in file storage
          example: ie/abcde-12345-fghijk-67890
        sourceIdentifier:
          type: string
          description: identifier of IE in source system
          example: oai:repository:12345
        IPIdentifier:
          type: string
          nullable: true
          description:
            reference to IP built from this IE (valid only in
            Report.data-context)
          example: ip01
        fetchedPayload:
          type: boolean
          description: true if the payload is present
          example: true
      required:
        - path
        - sourceIdentifier
        - fetchedPayload
    IP:
      title: IP
      description:
        An IP is represented by its relative path within the shared
        filesystem. Additional information includes a summary for
        validity, a reference to the IE on which this IP is based, and a
        reference to the full build-Report (given in Report.children).
      type: object
      properties:
        path:
          type: string
          description: relative path referencing an IP in file storage
          example: ip/abcde-12345-fghijk-67890
        valid:
          type: boolean
          description: validity of IP
          example: True
        IEIdentifier:
          type: string
          description:
            reference to IE from which this IP has been built (valid
            only in Report.data-context and only relevant for calls to
            /import/external)
          example: ie01
        logId:
          type: array
          description: list of identifiers
          items:
            $ref: '#/components/schemas/ReportIdentifier'
    JobData:
      title: JobData
      description:
        job output data (data-property in Report schema)
      type: object
      properties:
        success:
          type: boolean
          description:
            overall success of a job; false if any problems have been
            detected
          example: false
        IEs:
          type: object
          description:
            generated IEs by identifier (see IP.IEIdentifier); only
            relevant for calls to /import/external
          additionalProperties:
            $ref: '#/components/schemas/IE'
        IPs:
          type: object
          description: generated IPs by identifier (see IE.IPIdentifier)
          additionalProperties:
            $ref: '#/components/schemas/IP'
      example:
        success: false
        IEs:
          ie00:
            path: ie/abcde-12345-fghijk-67890
            IPIdentifier: ip00
            fetchedPayload: true
          ie01:
            path: ie/bcdef-23456-ghijkl-78901
            IPIdentifier: null
            fetchedPayload: false
        IPs:
          ip00:
            path: ip/cdefg-34567-hijklm-89012
            valid: true
            IEIdentifier: ie00
            logId: 1@ip_builder
    LogMessage:
      title: LogMessage
      description: |-
        This schema defines the format of the entries occurring in the
        log of a Report. A LogMessage consists of

        * datetime information (regarding time of message creation),
        * an origin (who filed this message), and
        * the actual message.
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/ISODateTime'
        origin:
          type: string
          description: origin of message creation
          example: Import Module
        body:
          type: string
          description: message body
          example: Job accepted.
      required:
        - datetime
        - origin
        - body
    Log:
      title: Log
      description: |-
        Common Log categories are: ERROR, WARNING, INFO, EVENT,
        NETWORK, FILE_SYSTEM, STARTUP, SHUTDOWN, USER,
        AUTHENTICATION, and SECURITY.
      type: object
      additionalProperties:
        title: LogCategory
        description: |-
          list of LogMessage objects
        type: array
        items:
          $ref: "#/components/schemas/LogMessage"
      example:
        INFO:
          - datetime: "2024-01-01T00:00:00+01:00"
            origin: Import Module
            body: Using default value '<...>' for argument '<...>'.
        EVENT:
          - datetime: "2024-01-01T00:00:00+01:00"
            origin: Import Module
            body: Queued job.
          - datetime: "2024-01-01T00:00:02+01:00"
            origin: Import Module
            body: Job exited normally.
    Report:
      title: Report
      description: |-
        A Report contains

        * information on job details (host, token),
        * information on the progress of a job,
        * a collection of log messages (categorized),
        * job output data, and
        * reports for child processes spawned by this job.
      type: object
      properties:
        host:
          type: string
          description: service url where this report has been generated
          example: https://www.lzv.nrw/import_module
        token:
          $ref: '#/components/schemas/JobToken'
        args:
          type: object
          description: request body contents given during submission
        progress:
          type: object
          properties:
            status:
              type: string
              description: job status in processing pipeline
              enum:
                - queued
                - running
                - aborted
                - completed
            verbose:
              type: string
              description: verbose description of job-progress
              example: Stage 1/2 (harvest) - collecting identifiers
            numeric:
              type: integer
              description: numeric representation of progress in percent
              example: 25
          required:
            - status
            - verbose
            - numeric
        log:
          $ref: '#/components/schemas/Log'
        children:
          type: object
          description: |-
            Reports of child jobs spawned in the context of this job;
            JSON-keys have the format '<identifier>@host' (following the
            ReportIdentifier schema)

            See SelfDescription.services for resolution of host
            identifier and host url.
          additionalProperties:
            allOf:
              - $ref: '#/components/schemas/Report'
              - type: object
                properties:
                  data: # No detailed reports of child jobs desired
                    type: object
      required:
        - host
        - token
        - args
        - progress
        - log
      example:
        host: https://www.lzv.nrw/import_module
        token:
          value: 37ee72d6-80ab-4dcd-a68d-f8d32766c80d
          expires: true
          expires_at: "2024-01-01T00:00:00+01:00"
        args:
          import:
            plugin: oai_pmh
            args:
              metadata_prefix: oai_dc
          build:
            mappingPlugin:
              plugin: mapping-plugin
              args: {}
        progress:
          status: completed
          verbose: Job terminated normally.
          numeric: 100
        log:
          ERROR:
            - datetime: "2024-01-01T00:00:02+01:00"
              origin: Import Module
              body: Error during import using plugin 'oai_pmh' (Timeout).
          EVENT:
            - datetime: "2024-01-01T00:00:00+01:00"
              origin: Import Module
              body: Job accepted.
            - datetime: "2024-01-01T00:00:01+01:00"
              origin: Import Module
              body: Starting harvest.
            - datetime: "2024-01-01T00:00:01+01:00"
              origin: OAI-Plugin
              body: Issue request 'ListIdentifiers'.
            - datetime: "2024-01-01T00:00:01+01:00"
              origin: OAI-Plugin
              body: Got no records.
            - datetime: "2024-01-01T00:00:03+01:00"
              origin: Import Module
              body: Harvest returned empty.
            - datetime: "2024-01-01T00:00:03+01:00"
              origin: Import Module
              body: Skipping build stage.
        children:
          ip00@ip_builder:
            host: https://www.lzv.nrw/ip_builder
            token:
              value: 82d88290-af4d-47fd-b77a-caee742cc2f7
              expires: false
            args:
              build:
                target:
                  path: ie/abcde-12345-fghijk-67890
                mappingPlugin:
                  plugin: mapping-plugin
                  args: {}
            progress:
              status: "completed"
              verbose: "Job terminated normally."
              numeric: 100
            log: <omitted in this example>
  parameters:
    Token: # see also components/schemas/Token
      in: query
      name: token
      required: true
      description:
        unique identifier for a job
      example: 37ee72d6-80ab-4dcd-a68d-f8d32766c80d
      schema:
        $ref: '#/components/schemas/Token'
  responses:
    201AcceptedSubmission:
      description: submission success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobToken'
    400BadRequest:
      description: malformed request body
      content:
        text/plain:
          schema:
            type: string
            example: "Missing required argument <X>"
    404NoTarget:
      description: target not found
      content:
        text/plain:
          schema:
            type: string
            example: "Resource not found. Target does not exist."
    422SemanticProblem:
      description: semantic problem
      content:
        text/plain:
          schema:
            type: string
            example: "Argument <X> has the wrong type"
    503Busy:
      description: container is busy
      content:
        text/plain:
          schema:
            type: string
            example:
              "Service unavailable: maximum number of submissions reached."
  callbacks:
    termination:
      '{$request.body#/CallbackUrl}':
        post:
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JobToken'
          responses:
            '200':
              description: accept callback
